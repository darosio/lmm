#+TITLE: Index

  This file was used to be automatically generated by org-page.



** source                                                                       :noexport:
 #+BEGIN_SRC elisp
(require 'ox-publish)
(setq org-publish-project-alist
      '(("blog"
         :components ("blog-content" "blog-static"))
        ("blog-content"
         :base-directory "~/metamodels/"
         :base-extension "org"
         :publishing-directory "~.www/"
         ;; :publishing-directory "/ssh:justinlilly@caesium.justinlilly.com:/var/www/blog/"
         :recursive t
         ;; :publishing-function org-publish-org-to-html
         :publishing-function 'ox-html
         :export-with-tags nil
         :headline-levels 4             ; Just the default for this project.
         :table-of-contents nil
         :section-numbers nil
         :sub-superscript nil
         :todo-keywords nil
         :author nil
         :creator-info nil
         :html-preamble "blog header goes here"
         :html-postamble nil
         :style "This is raw html for stylesheet <link>'s"
         :timestamp t
         :exclude-tags ("noexport" "todo")
         :auto-preamble t)))
 #+END_SRC

#+begin_src emacs-lisp
(require 'ox-publish)
(setq org-publish-project-alist
      '(
       ;; ... add all the components here
        ("content"
         :base-directory "content/"
         :base-extension "org"
         :publishing-directory "output/"
         :recursive t
         :publishing-function org-html-publish-to-html
         :headline-levels 4             ; Just the default for this project.
         :auto-preamble nil
         :auto-sitemap t                ; Generate sitemap.org automagically...
         :sitemap-filename "sitemap.org"  ; ... call it sitemap.org (it's the default)...
         :sitemap-title "Sitemap"         ; ... with title 'Sitemap'.
         :language "en"
         :html-head  "<link rel='stylesheet' type='text/css' href='style.css' />"
         :html-head-extra "<meta name='viewport' content='width=device-width, initial-scale=1.0' />"
         :with-email nil
         ;; :html-preamble  my-preamble-format
		  ;; :html-preamble "~/sitemap.html"
         :exports code
		  ;; :html-postamble my-website-html-postamble
		  :htmlized-source t    ;; htmlized-source     non-nil means, publish htmlized source
         )

        ("static"
         :base-directory "content/"
         :base-extension "html\\|css\\|js\\|png\\|jpg\\|gif\\|pdf\\|mp3\\|ogg\\|swf"
         :publishing-directory "output/"
         :recursive t
         :publishing-function org-publish-attachment
         )

        ("org" :components ("content" "static"))


      ))

(org-publish-project "org")
#+end_src

#+RESULTS:


#+begin_src emacs-lisp
(httpd-serve-directory "output/")
#+end_src

#+RESULTS:
: Started simple-httpd on 0.0.0.0:8080, serving: output/

